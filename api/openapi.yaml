openapi: 3.0.0

info:
  title: Stargazer API
  version: v1.0.0
  description: Stargazer API Reference

servers:
  - url: /
    description: Stargazer API

security:
  - access_token: []

tags:
  # Ping: Used for health check and service status monitoring
  - name: Ping
    description: |-
      Service health check and online status monitoring

  # User: Handles user authentication, authorization and preferences
  - name: User
    description: |-
      User registration, login, permissions control, personal preferences

  # Downloader: Manages various download clients and tasks
  - name: Downloader
    description: |-
      QB/Aria2/Transmission client setup, status monitoring, task control

  # Uploader: Handles local file uploads and management
  - name: Uploader
    description: |-
      Local media file upload, resume support, file management

  # Organization: Controls media file organization and structure
  - name: Organization
    description: |-
      File renaming, auto-categorization, hard/soft link management

  # Library: Manages media libraries and their settings
  - name: Library
    description: |-
      Media library creation, scanning, monitoring, category management

  # Content: Handles all media content operations
  - name: Content
    description: |-
      Video/Comics/Music/Novel content management, playback, reading

  # Metadata: Controls metadata scraping and management
  - name: Metadata
    description: |-
      TMDB/Bangumi metadata scraping, matching, editing

  # Notification: Manages system notifications and alerts
  - name: Notification
    description: |-
      Multi-channel notifications for downloads, updates, system alerts

  # Setting: Controls system-wide settings
  - name: Setting
    description: |-
      System configuration, storage settings, network settings, security settings

  # System: Handles core system operations
  - name: System
    description: |-
      System status monitoring, log management, backup/restore, updates

  # Task: Manages background task queue
  - name: Task
    description: |-
      Queue management for downloads, scraping, and transcoding tasks

  # Transcoding: Controls media transcoding operations
  - name: Transcoding
    description: |-
      Video transcoding, subtitle embedding, audio conversion, format adaptation

  # Progress: Tracks user progress across media
  - name: Progress
    description: |-
      Watch history, playback progress, reading position tracking and sync

  # RSS: Manages RSS feed subscriptions
  - name: RSS
    description: |-
      RSS feed management, auto-download, update checks, filter rules

  # Search: Handles search functionality
  - name: Search
    description: |-
      Full-text search, advanced filtering, smart recommendations, related content

  # Rule: Manages automation rules
  - name: Rule
    description: |-
      Download rules, rename rules, categorization rules, subscription rules

  # Device: Handles device management and sync
  - name: Device
    description: |-
      Device registration, authentication, data sync, offline management

  # Webhook: Manages external service integrations
  - name: Webhook
    description: |-
      Third-party service integration, webhook configuration, event triggers

paths:
  /ping:
    get:
      operationId: ping
      tags:
        - Ping
      summary: Ping
      description: Check if the server is alive
      responses:
        "200":
          $ref: "#/components/responses/ResponseOK"
        "500":
          $ref: "#/components/responses/ResponseInternalServerError"

components:
  securitySchemes:
    access_token:
      type: apiKey
      in: header
      name: Authorization
  responses:
    ResponseOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponse"

    ResponseStringOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponseString"

    ResponseNumberOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponseNumber"

    ResponseIntegerOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponseInteger"

    ResponseBooleanOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponseBoolean"

    ResponseInterfaceOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponseInterface"

    ResponseArrayOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SuccessResponseArray"

    # 400
    ResponseBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"

    # 401
    ResponseUnauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"

    # 404
    ResponseNotFoundError:
      description: Not found error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"

    # 500
    ResponseInternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"

  schemas:
    BaseResponse:
      properties:
        message:
          readOnly: true
          description: message returned by server side if there is any
          type: string
          example: ""

    SuccessResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              anyOf:
                - type: string
                - type: number
                - type: integer
                - type: boolean
                - type: object
                - type: array
                  items: {}

    SuccessResponseString:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: string

    SuccessResponseNumber:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: number

    SuccessResponseInteger:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: integer

    SuccessResponseBoolean:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: boolean

    SuccessResponseInterface:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: object

    SuccessResponseArray:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - properties:
            data:
              type: array
              items: {}
